@{
    ViewBag.Title = "领料单打印预览";
    Layout = "~/Views/Shared/_Form.cshtml";
}

<script src="~/Content/gridreport/CreateControl.js" type="text/javascript"></script>

<script type="text/javascript">
    CreateReport("Report");

    var Report = document.getElementById("Report");

    var report = request('report');
    var data = request('data');
    var doucno = request('keyValue');
    var billtype = request('billtype');

    var templateURL = "";
    var dataURL = "";

    if (report != "") {
        templateURL = "/Report/grf/" + report + ".grf";
    }

    if (data != "") {
        dataURL = "/Report/data/DataCenter.ashx?data=" + data + "&doucno=" + doucno + "&billtype=" + billtype;
    }


    //在网页初始加载时向报表提供数据
    function window_onload() {
        Report.LoadFromURL(templateURL);
    }

    //预览打印
    function btnPreview_onclick() {
        Report.LoadDataFromURL(dataURL);

        Report.PrintPreview(true);
    }

    //打印
    function btnPrint_onclick() {
        Report.LoadDataFromURL(dataURL);

        Report.Print(true);
    }

    //套打
    function btnLoopPrint_onclick() {
        var reports = [
                {
                    report: "1a.grf",
                    data: "DataCenter.ashx?data=Customer"
                },
                {
                    report: "2a.grf",
                    data: "DataCenter.ashx?data=SaleDetail"
                },
                {
                    report: "6g.grf",
                    data: "DataCenter.ashx?data=EmployeeOne"
                }
        ],
            reportLen = reports.length,
            i;

        Report.BeginLoopPrint(3, true); //循环打印开始时调用。grpgsAll 3 生成报表所有数据。

        for (i = 0; i < reportLen; i++) {
            //载入要打印的报表模板，如果每次都是打印相同的报表模板，可以将此任务移到循环之前，模板只需载入一次就可以
            Report.LoadFromURL("../../grf/" + reports[i].report);

            //载入报表数据，从URL处载入数据，数据格式为 XML 或 JSON
            //如果数据已经在WEB网页前端，也可以用 LoadDataFromXML 方法载入，数据必须是符合要求的 XML 或 JSON
            //其它形式的经在WEB网页前端的数据可以用报表的相关接口推送给报表
            Report.LoadDataFromURL("../../data/" + reports[i].data);

            Report.LoopPrint(true); //执行一次循环打印
        }

        Report.EndLoopPrint(); //循环打印结束时调用
    }


    //导出Excel
    function btnExportXls_onclick() {
        Report.LoadDataFromURL(dataURL);

        //要改变导出默认选项参数，响应IGridppReport.ExportBegin 事件，在事件函数中设置选项参数属性，具体参考例子03.Export
        Report.ExportDirect(1, "采购入库单.xls", true, true); //gretXLS = 1,
    }

    $(function () {
        btnPrint_onclick();//打印
    });

    window_onload();//加载模板

    btnPrint_onclick();
</script>

<div>
    <object id="Report" type="application/x-grplugin6-report" width="0" height="0" style="display: block; margin-top: -16;" viewastext=""></object>
    @*<p>
        <input id="btnPreview" onclick="return btnPreview_onclick()" type="button" value="打印预览">&nbsp;
        <input id="btnPrint" onclick="return btnPrint_onclick()" type="button" value="直接打印">&nbsp;
        <input id="btnLoopPrint" onclick="return btnLoopPrint_onclick()" type="button" value="循环打印">&nbsp;
        <input id="btnExportXls" onclick="return btnExportXls_onclick()" type="button" value="导出为Excel">
    </p>*@
</div>

